Studio 5 checkout form, to be completed by the team:

Team members (MUST be completed accurately to get credit):

     Last Name           Last 3 digits of ID
     
  1 Wilson					994
  2 Sturm                   710
  3 Guo						413
     
1) Readers/Writer locks

  a) Under what conditions should a thread be able to obtain 
      a Readers lock on an object?
      
      if there are no writers.
      
  b) How does your implementation of RWLock enforce those conditions?
  
  	 it continuously checks for the correct conditions before allowing access
  
  c) Under what conditions should a thread be able to obtain 
      a Writer lock on an object?
      
      if there are no readers or writers
      
  d) How does your implementation of RWLock enforce those conditions?
  
  	  it continuously checks for the correct conditions before allowing access
  
2) Application to Account
  What are the implications of each of the following approaches for withdraw and deposit?
  	 *   a) A read lock to get the balance and then a write lock to change it?
  	 
  	 		you only need read access to check a balance but you need writing access to change it
  	 
	 *   b) A read lock around the whole thing, and in the middle, a write lock to change
	 *        the balance?
	 
	 		this would cause issues because it would see there is a reader and not allow it to write
	 
	 *   c) A writer's lock around the entire transaction?
	 
	 		cause minor issues because other people would not be able to check balance during the transaction
  

3) Good mazes and bad mazes

Explain the algorithm your group devised for deciding good vs. bad mazes.
  a) How do you determine that the maze has the right number of rooms?
  	 check the dimensions of the matrix and multiply height by width
  b) How do you determine that the maze has no cycles?
  	 it needs an even number of rooms with an odd number of connections


4) Comments about this studio (was it useful, did you learn stuff, was it
   too easy or hard)?
