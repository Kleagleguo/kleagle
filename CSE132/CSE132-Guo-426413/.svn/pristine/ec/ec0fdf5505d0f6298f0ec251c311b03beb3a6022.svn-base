package lab3a;
import java.util.List;
import java.util.Random;

import lab3a.model.Room;

public class Lab {
	public static final int DELAY = 5;
	
	public static void main(String args[]) {

		Random rand = new Random();
		for (int i=0; i < 10; ++i) {
			int rows = 5 + rand.nextInt(4);
			int cols = 10 + rand.nextInt(4);
			int randomRoom = rand.nextInt(rows*cols);
			Maze m = new Maze(rows,cols);
			m.initMaze();
			m.workMaze();
			List<Room> rooms = m.getRooms();
			CheckMaze verify = new CheckMaze(m, rooms.get(randomRoom));
			if (verify.runCheck()) System.out.println("Passed check");
			else throw new Error("Validation failed");
			Lab.sleep(2000);
		}
		System.out.println("Over");
	}

	/**
	 * The sleep that is observed nominally.  Change this to speed things up.
	 */
	public static void sleep() {
		sleep(500);
	}

	public static void sleep(int ms) {
		try {
			Thread.sleep(ms);
		}
		catch (Exception e) {
			throw new Error("cannot happen " + e);
		}
	}
}














////*******************************************************
//// old lab.java 
//
///*TA=lukefu
// * Grade=84
// * -5 for compute color not ruling out red/green
// * -1 for TODO tag
// * -5 for no class headers
// * -5 for no function headers
// */
//public class Lab {
//	
//	public static final int DELAY = 500;
//	
//	public static void main(String args[]) {
//		//
//		// Start with 2x2, but after you get things working, go bigger
//		//
//		//Maze m = new Maze(2, 2);
//		Maze m = new Maze(5, 5);
//		m.demo(50);
//
//	}
//	
//	/**
//	 * The sleep that is observed nominally.  Change this to speed things up.
//	 */
//	public static void sleep() {
//		sleep(DELAY);
//	}
//	
//	public static void sleep(int ms) {
//		try {
//			Thread.sleep(ms);
//		}
//		catch (Exception e) {
//			throw new Error("cannot happen " + e);
//		}
//	}
//}
